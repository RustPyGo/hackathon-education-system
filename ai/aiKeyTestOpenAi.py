import requests
import json
import os
from dotenv import load_dotenv

# Load environment variables t·ª´ file .env
load_dotenv()

# L·∫•y API key t·ª´ environment variable
api_key = os.getenv('OPENAI_API_KEY')
if not api_key or api_key == 'your_openai_api_key_here':
    print("‚ùå L·ªói: Ch∆∞a c·∫•u h√¨nh OPENAI_API_KEY")
    print("üí° H∆∞·ªõng d·∫´n:")
    print("   1. M·ªü file .env trong th∆∞ m·ª•c n√†y")
    print("   2. Thay 'your_openai_api_key_here' b·∫±ng API key th·ª±c c·ªßa b·∫°n")
    print("   3. L∆∞u file v√† ch·∫°y l·∫°i script")
    print("   4. N·∫øu ch∆∞a c√≥ python-dotenv: pip install python-dotenv")
    exit(1)

url = "https://api.openai.com/v1/chat/completions"
headers = {
    "Content-Type": "application/json",
    "Authorization": f"Bearer {api_key}"
}
data = {
    "model": "gpt-3.5-turbo",
    "messages": [
        {
            "role": "user",
            "content": "t·∫°o 1 json m·∫´u cho m·ªôt c√¢u h·ªèi v·ªÅ AI, 4 c√¢u, m·ªói c√¢u c√≥ 4 l·ª±a ch·ªçn, trong ƒë√≥ c√≥ 1 c√¢u ƒë√∫ng"
        }
    ],
    "max_tokens": 1000,
    "temperature": 0.7
}

# G·ª≠i request
response = requests.post(url, headers=headers, json=data)
result = response.json()

# L∆∞u d·ªØ li·ªáu g·ªëc v√†o show.json
with open('show.json', 'w', encoding='utf-8') as f:
    json.dump(result, f, indent=2, ensure_ascii=False)

print("=== TH√îNG TIN ƒê·∫¶Y ƒê·ª¶ ===")
print(f"Status Code: {response.status_code}")

print(f"Response ID: {result.get('id', 'N/A')}")

# Hi·ªÉn th·ªã c√¢u tr·∫£ l·ªùi AI
if 'choices' in result and len(result['choices']) > 0:
    choice = result['choices'][0]
    ai_response = choice['message']['content']
    
    print("\n=== C√ÇU TR·∫¢ L·ªúI AI ===")
    print(f"N·ªôi dung: {ai_response.strip()}")
    print(f"Role: {choice['message']['role']}")
    print(f"Finish Reason: {choice['finish_reason']}")
    
    # Hi·ªÉn th·ªã th√¥ng tin token
    if 'usage' in result:
        usage = result['usage']
        print("\n=== TH√îNG TIN TOKEN ===")
        print(f"T·ªïng tokens: {usage.get('total_tokens', 'N/A')}")
        print(f"Prompt tokens: {usage.get('prompt_tokens', 'N/A')}")
        print(f"Completion tokens: {usage.get('completion_tokens', 'N/A')}")
else:
    print("‚ùå Kh√¥ng c√≥ ph·∫£n h·ªìi t·ª´ AI")

print(f"\n‚úÖ D·ªØ li·ªáu g·ªëc ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o: show.json")
print(f"‚úÖ K√≠ch th∆∞·ªõc file: {len(json.dumps(result))} bytes")